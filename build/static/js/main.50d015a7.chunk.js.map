{"version":3,"sources":["components/NavBar/navbar.module.css","assets/icons/broken-heart.png","components/NavBar/index.jsx","config/firebase.js","components/Profiles/Deck/DeckCard.jsx","components/Profiles/Deck/data.js","components/Notifications/Notifications.jsx","components/Profiles/Deck/CardButtons.jsx","components/Profiles/Deck/Deck.jsx","components/Chat/ChatRequest.jsx","components/Chat/ChatWrapper.jsx","components/Chat/Chat.jsx","components/Home/Home.jsx","components/Auth/PrivateRoute/PrivateRoute.jsx","components/Auth/SignIn/SignIn.jsx","components/Auth/SignUp/SignUp.jsx","components/Admin/AdminHome/AdminGallery.jsx","config/cloudinary.js","components/ImageUploader/ImageUploder.jsx","components/Profiles/UpdateProfile/UpdateProfille.jsx","components/Admin/AdminHome/AdminHome.jsx","App.jsx","registerServiceWorker.js","components/ErrorPage/index.jsx","components/ErrorBoundary/index.jsx","redux/actions/types.js","redux/reducers/errorReducers.js","redux/reducers/imageReducers.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["module","exports","NavBar","firebase","useFirebase","history","useHistory","isLoggedIn","useSelector","state","auth","isEmpty","Fragment","className","styles","skipLink","href","to","Button","variant","onClick","signOut","then","console","log","push","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_FIREBASE_REACT_APP_STORAGE_BUCKET","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","initializeApp","firestore","storage","DeckCard","item","title","text","url","Card","Img","src","alt","Body","Title","Text","id","Notifications","heading","body","type","small","confirmButtonText","handleConfirm","style","useState","show","setShow","Alert","onClose","dismissible","Heading","Toast","Header","toUpperCase","CardButtons","right","left","window","innerWidth","margin","minWidth","class","Deck","lastSwipeDirection","setLastSwipeDirection","users","data","profile","uid","displayName","email","INITIAL_CARDS_STATE","cards","setCards","databaseRef","database","ref","chatRequestRef","length","child","useFirestoreConnect","collection","storeAs","userProfileImages","Object","keys","map","userId","i","avatarUrl","useEffect","setTimeout","brokenHeartIcon","renderButtons","onSwipe","swipeDirection","direction","RIGHT","card","timestamp","Date","receivingUserId","chatRequested","previewText","receivingUser","name","avatar","sendingUser","toDateString","sendChatRequest","LEFT","prev","slice","swipeThreshold","fadeThreshold","ChatRequest","chatRequest","receivingAvatar","receivingUsername","Image","height","width","roundedCircle","ChatWrapper","chats","ordered","useFirebaseConnect","as","chatRequests","chatRequestId","value","textAlign","gridColumn","chatElements","Chat","chatIsOpen","toggleOpenChat","Home","PrivateRoute","role","Component","children","rest","showAlert","setShowAlert","undefined","render","props","SignIn","setEmail","password","setPassword","errors","setErrors","signInWithProvider","provider","userEmail","userPassword","login","err","code","includes","key","method","htmlFor","placeholder","required","onChange","e","target","event","preventDefault","aria-hidden","createUser","AdminGallery","images","rel","cloudinaryConfig","ImageUploader","handleClick","styleClass","btnText","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","result","secure_url","bind","OverlayTrigger","placement","delay","hide","overlay","Tooltip","UpdateProfile","useFirestore","profileToUpdate","doc","update","AdminHome","userImagesRef","marginTop","App","exact","path","component","SignUp","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorPage","ErrorBoundary","React","constructor","super","this","hasError","componentDidCatch","errorInfo","withRouter","initialState","imageUrls","combineReducers","action","payload","profileImages","assign","firebaseReducer","firestoreReducer","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","presence","sessions","dispatch","createFirestoreInstance","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.50d015a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3TdC_\"};","module.exports = __webpack_public_path__ + \"static/media/broken-heart.96fa688e.png\";","import React from \"react\";\nimport styles from \"./navbar.module.css\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport \"../../assets/stylesheets/navbar.css\";\n\nconst NavBar = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const isLoggedIn = useSelector((state) => !state.firebase.auth.isEmpty);\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        console.log(\"signed out\");\n        history.push(\"/sign-in\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Date Me\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"/home\">\n            Home\n          </Link>\n          {isLoggedIn ? (\n            <>\n              <Link to=\"/admin\" className=\"nav-item nav-link \">\n                Account\n              </Link>\n\n              <Button\n                className=\"nav-item nav-link \"\n                variant={\"none\"}\n                onClick={() => signOut()}\n              >\n                Logout\n              </Button>\n            </>\n          ) : (\n            <Link to=\"/sign-in\">Sign In</Link>\n          )}\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default NavBar;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n//analytics is optional for this tutoral\n// firebase.analytics();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\nexport { storage, auth, firestore, firebase };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst DeckCard = ({\n  item: { title, text, url = \"https://via.placeholder.com/150\" },\n}) => {\n  return (\n    <Card>\n      <Card.Img variant=\"top\" src={url} alt={title} />\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{text}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DeckCard;\n","export default [\n  {\n    id: 1,\n    title: \"This is react deck swiper\",\n    text: \"It allows you to build tinder-like swipeable cards easily\",\n    url:\n      \"https://images.unsplash.com/photo-1496248051939-0382a018e59a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\",\n  },\n  {\n    id: 2,\n    title: \"and it's awesome!\",\n    text: \"So, what are you waiting for? 🚀\",\n    url:\n      \"https://images.unsplash.com/photo-1533227268428-f9ed0900fb3b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { Toast, Alert, Button } from \"react-bootstrap\";\n\nconst Notifications = ({\n  heading,\n  body,\n  type,\n  small,\n  variant,\n  confirmButtonText,\n  handleConfirm,\n  style,\n}) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    show &&\n    (type === \"alert\" ? (\n      <Alert\n        variant={variant}\n        onClose={() => setShow(false)}\n        style={style}\n        dismissible\n      >\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p>{body}</p>\n        {confirmButtonText && (\n          <Button variant=\"outline-danger\" onClick={handleConfirm}>\n            {confirmButtonText}{\" \"}\n          </Button>\n        )}\n      </Alert>\n    ) : (\n      type === \"toast\" && (\n        <Toast onClose={() => setShow(false)} style={style}>\n          <Toast.Header>\n            <strong className=\"mr-auto\">{heading.toUpperCase()}</strong>\n            <small>{small}</small>\n          </Toast.Header>\n          <Toast.Body>{body}</Toast.Body>\n        </Toast>\n      )\n    ))\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Notifications from \"../../Notifications/Notifications\";\n\nconst CardButtons = ({ right, left }) => {\n  return (\n    <div>\n      {window.innerWidth >= 480 && (\n        <Notifications\n          type=\"toast\"\n          heading=\"Having trouble?\"\n          small=\"Try our mobile version to get the full experience\"\n          body=\"Please use the buttons below.\"\n          style={{ margin: \"0 auto\", minWidth: \"100%\" }}\n        ></Notifications>\n      )}\n      <div className=\"swipe-card-buttons\">\n        <Button\n          onClick={left}\n          variant=\"outline-danger\"\n          className=\"dislike-btn \"\n        >\n          <i class=\"fa fa-thumbs-down\"></i>\n        </Button>\n        <Button onClick={right} variant=\"outline-success\" className=\"like-btn\">\n          <i class=\"fa fa-thumbs-up\"></i>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CardButtons;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { firebase } from \"../../../config/firebase\";\n\nimport { Swipeable, direction } from \"react-deck-swiper\";\n\nimport { Button } from \"react-bootstrap\";\n\nimport DeckCard from \"./DeckCard\";\n\nimport INITIAL_CARDS_STATE from \"./data\";\nimport CardButtons from \"./CardButtons\";\n\nimport brokenHeartIcon from \"../../../assets/icons/broken-heart.png\";\nimport \"../../../assets/stylesheets/deck.css\";\n\nconst Deck = () => {\n  const [lastSwipeDirection, setLastSwipeDirection] = useState(null);\n  const { users } = useSelector((state) => state.firestore.data);\n  const {\n    profile,\n    auth: { uid, displayName, email },\n  } = useSelector((state) => state.firebase);\n  const [cards, setCards] = useState(INITIAL_CARDS_STATE);\n\n  const databaseRef = firebase.database().ref();\n  const chatRequestRef =\n    uid &&\n    cards.length >= 1 &&\n    databaseRef.child(\"chats\").child(cards[0].id).child(\"chatRequests\");\n\n  useFirestoreConnect({\n    collection: \"users\",\n    storeAs: \"users\",\n  });\n\n  const userProfileImages = users\n    ? Object.keys(users).map((userId, i) => {\n        let { displayName, email, avatarUrl } = users[userId];\n        return { id: userId, title: displayName, text: email, url: avatarUrl };\n      })\n    : INITIAL_CARDS_STATE;\n\n  useEffect(() => {\n    setCards(userProfileImages);\n    // eslint-disable-next-line\n  }, [users]);\n\n  const sendChatRequest = (card) => {\n    const timestamp = new Date();\n    const { title, text, url, id: receivingUserId } = card;\n\n    return chatRequestRef.push({\n      chatRequested: true,\n      previewText: `${\n        displayName || email\n      } has requested to chat with you. Reply to start a chat.`,\n      receivingUser: {\n        id: receivingUserId,\n        name: title || text,\n        avatar: url || \"placeholder-image\",\n      },\n      sendingUser: {\n        id: uid,\n        name: displayName,\n        avatar: profile.avatarUrl ? profile.avatarUrl : \"placeholder-image\",\n      },\n      timestamp: timestamp.toDateString(),\n    });\n  };\n  const handleOnSwipe = (swipeDirection) => {\n    if (swipeDirection === direction.RIGHT) {\n      // handle right swipe\n      setLastSwipeDirection(\"right\");\n\n      // save liked profile here to list of liked\n      // or notify user (add notifications)\n      sendChatRequest(cards[0]);\n    }\n\n    if (swipeDirection === direction.LEFT) {\n      // handle left swipe\n      setLastSwipeDirection(\"left\");\n    }\n    setCards((prev) => prev.slice(1));\n  };\n\n  const renderButtons = ({ right, left }) => (\n    <CardButtons right={right} left={left} />\n  );\n  const refreshProfiles = () => {\n    setCards(userProfileImages);\n    setLastSwipeDirection(null);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      lastSwipeDirection && setLastSwipeDirection(null);\n    }, 200);\n  }, [lastSwipeDirection]);\n\n  return (\n    <div>\n      {lastSwipeDirection === \"right\" && (\n        <i className=\"fa fa-heart swipe-icon\" />\n      )}\n      {lastSwipeDirection === \"left\" && (\n        <img src={brokenHeartIcon} alt=\"broken heart\" className=\"swipe-icon\" />\n      )}\n\n      {cards.length > 0 ? (\n        <>\n          <div className=\"swipe-deck\">\n            <Swipeable\n              renderButtons={renderButtons}\n              onSwipe={handleOnSwipe}\n              swipeThreshold={200}\n              fadeThreshold={60}\n            >\n              <DeckCard item={cards[0]} />\n            </Swipeable>\n          </div>\n        </>\n      ) : (\n        <div variant=\"body1\">\n          No more matches at this time.\n          <Button onClick={refreshProfiles}>Refresh</Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Deck;\n","import React from \"react\";\nimport { Card, Image } from \"react-bootstrap\";\n\nconst ChatRequest = ({\n  chatRequest: {\n    previewText,\n    receivingUser: { avatar: receivingAvatar, name: receivingUsername },\n    timestamp,\n  },\n}) => {\n  return (\n    <div className=\"chat-request\">\n      <Image\n        src={receivingAvatar}\n        height=\"50px\"\n        width=\"50px\"\n        className=\"image\"\n        roundedCircle\n      />\n      <Card.Title className=\"title\">{receivingUsername}</Card.Title>\n      <Card.Text className=\"preview-text\">\n        {previewText} - <span>{timestamp}</span>\n        <div>Reply</div>\n      </Card.Text>\n    </div>\n  );\n};\n\nexport default ChatRequest;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport UserToChat from \"./ChatRequest\";\nimport { useSelector } from \"react-redux\";\nimport { useFirebaseConnect } from \"react-redux-firebase\";\nimport { RiChatDownloadLine } from \"react-icons/ri\";\n\nconst ChatWrapper = () => {\n  // fetch messages\n  // users/{uid}/chats/\n  // include presence from fb to show online or not\n\n  const {\n    auth: { uid },\n    profile: currentUser,\n    ordered: { chats },\n  } = useSelector((state) => state.firebase);\n\n  useFirebaseConnect([`chats/${uid}/chatRequests`]); // sync into redux\n\n  // const chats = [\n  //   {\n  //     id: \"id\",\n  //     previewText: \"preview text-last message\",\n  //     time: timestamp.getTime(),\n  //     requestedMessage: false,\n  //     receivingUser: {\n  //       name: \"author.name\",\n  //       avatar: currentUser.avatarUrl || \"\",\n  //     },\n  //     currentUser: {\n  //       name: currentUser.displayName,\n  //       avatar: currentUser.avatarUrl || \"\",\n  //     },\n  //   },\n  // ];\n\n  const chatElements = () => {\n    const chatRequests = chats && uid && chats[uid].chatRequests;\n\n    return chatRequests ? (\n      Object.keys(chatRequests).map((chatRequestId, i) => {\n        return <UserToChat chatRequest={chatRequests[chatRequestId].value} />;\n      })\n    ) : (\n      <div style={{ textAlign: \"center\", gridColumn: \"1 / 3\" }}>\n        No chats available\n      </div>\n    );\n  };\n\n  return (\n    <Card className=\"chat-wrapper\">\n      <Card.Header as=\"h5\">Chats</Card.Header>\n      <Card.Body className=\"chat-body\">{chatElements()}</Card.Body>\n    </Card>\n  );\n};\n\nexport default ChatWrapper;\n","import React from \"react\";\n\nimport { RiMessage3Line } from \"react-icons/ri\";\nimport \"../../assets/stylesheets/chat.css\";\nimport ChatWrapper from \"./ChatWrapper\";\nimport { useState } from \"react\";\n\nconst Chat = () => {\n  const [chatIsOpen, toggleOpenChat] = useState(false);\n\n  const handleOpenChat = () => {\n    toggleOpenChat(!chatIsOpen);\n  };\n\n  return (\n    <div>\n      <RiMessage3Line className=\"chat-btn\" onClick={handleOpenChat} />\n      {/* display maximized chat */}\n      {chatIsOpen && <ChatWrapper />}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\r\nimport Deck from \"../Profiles/Deck/Deck\";\r\nimport Chat from \"../Chat/Chat\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main id=\"mainContent\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center  p-0\">\r\n          <div className=\"animated-deck\">\r\n            <Deck />\r\n          </div>\r\n        </div>\r\n        <Chat />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\n// eslint-disable-next-line\nimport { Route } from \"react-router-dom\";\nimport Home from \"../../Home/Home\";\nimport { useSelector } from \"react-redux\";\n\nfunction PrivateRoute({ role, children: Component, ...rest }) {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const [showAlert, setShowAlert] = useState(true);\n  if (role === undefined) {\n    role = false;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth.isEmpty ? (\n          Component\n        ) : showAlert ? (\n          <>\n            <div className=\"alert alert-danger login-alert\" role=\"alert\">\n              Please login first!\n              <button\n                className=\"btn-success alert-close-btn\"\n                onClick={() => setShowAlert(false)}\n              >\n                X\n              </button>\n            </div>\n          </>\n        ) : (\n          <Home {...props} />\n        )\n      }\n    />\n  );\n}\nexport default PrivateRoute;\n\n/// create component with alert message to login\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"../../Notifications/Notifications\";\n\nimport \"../../../assets/stylesheets/signin.css\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n\n    firebase\n      .login({\n        provider: provider === \"email\" ? null : provider,\n        type: \"popup\",\n        email: userEmail,\n        password: userPassword,\n      })\n      .then(() => {\n        history.push(\"/admin\");\n      })\n      .catch((err) => {\n        if (err.code.includes(\"account-exists\")) {\n          setErrors([...errors, \"Account Exists\"]);\n        }\n      });\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Log In </h3>\n                  <Link to=\"sign-up\">Sign up</Link>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"../../Notifications/Notifications\";\nimport \"../../../assets/stylesheets/signin.css\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n    if (provider === \"email\") {\n      firebase\n        .createUser({\n          email,\n          password,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    } else {\n      firebase\n        .login({\n          provider: provider === \"email\" ? null : provider,\n          type: \"popup\",\n          email: userEmail,\n          password: userPassword,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    }\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Sign up </h3>\n                  <Link to=\"sign-in\">Log In</Link>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <h1>Sign In</h1>\n      <button\n        onClick={(event) => {\n          event.preventDefault();\n          signInWithGoogle();\n        }}\n      >\n        Sign In with Google\n      </button> */}\n    </div>\n  );\n};\nexport default SignIn;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useFirebaseConnect } from \"react-redux-firebase\";\n\nimport \"../../../assets/stylesheets/adminGallery.css\";\n\nconst AdminGallery = (props) => {\n  const { uid } = useSelector((state) => state.firebase.auth);\n\n  // get user images store to redux\n  useFirebaseConnect(`users/${uid}/images`);\n\n  const images = useSelector(\n    (state) =>\n      state.firebase.data.users && state.firebase.data.users[uid].images\n  );\n\n  const imageElements = () => {\n    return (\n      images &&\n      Object.keys(images).map((key, i) => {\n        let { url } = images[key];\n        return (\n          <a href={url} target=\"_blank\" key={i} rel=\"noopener noreferrer\">\n            <img src={url} alt={\"insert alt\"} />\n          </a>\n        );\n      })\n    );\n  };\n\n  return <div className=\"user-image-gallery\">{imageElements()}</div>;\n};\n\nexport default AdminGallery;\n","const cloudinaryConfig = {\n  cloudName: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n  apiKey: process.env.REACT_APP_CLOUDINARY_KEY,\n  apiSecret: process.env.REACT_APP_CLOUDINARY_SECRET,\n  uploadPreset: process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET,\n};\n\nexport { cloudinaryConfig };\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { cloudinaryConfig } from \"../../config/cloudinary\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nconst ImageUploader = ({ handleClick, styleClass, btnText }) => {\n  const uploadWidget = () => {\n    // eslint-disable-next-line\n    cloudinary.openUploadWidget(\n      {\n        cloud_name: cloudinaryConfig.cloudName,\n        upload_preset: cloudinaryConfig.uploadPreset,\n        tags: [\"dating\"],\n      },\n      function (err, result) {\n        if (err) {\n          console.log(err);\n        } else {\n          handleClick(result[0].secure_url);\n        }\n      }\n    );\n  };\n  const renderTooltip = (props) => {\n    return (\n      <Tooltip id=\"add-image-tooltip\" {...props}>\n        Add Image\n      </Tooltip>\n    );\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"upload\">\n        <Button onClick={uploadWidget.bind(this)} className={styleClass}>\n          {styleClass === \"upload-button\" ? (\n            <OverlayTrigger\n              placement=\"bottom\"\n              delay={{ show: 50, hide: 300 }}\n              overlay={renderTooltip}\n            >\n              <div className=\"\">{btnText}</div>\n            </OverlayTrigger>\n          ) : (\n            <div>{btnText}</div>\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUploader;\n","import React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport ImageUploader from \"../../ImageUploader/ImageUploder\";\n\nconst UpdateProfile = () => {\n  const firestore = useFirestore();\n  const {\n    auth: { uid },\n    profile,\n  } = useSelector((state) => state.firebase);\n\n  //   called after getting the url from cloudinary\n  const updateProfile = (url) => {\n    let profileToUpdate = profile;\n    profileToUpdate.avatarUrl = url;\n\n    firestore.collection(`users`).doc(uid).update(profileToUpdate);\n  };\n\n  return (\n    <ImageUploader\n      handleClick={updateProfile}\n      styleClass={\"change-profile-image-btn\"}\n      btnText={\"Change Profile Photo\"}\n    />\n  );\n};\n\nexport default UpdateProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AdminGallery from \"./AdminGallery\";\nimport ImageUploader from \"../../ImageUploader/ImageUploder\";\nimport { firebase } from \"../../../config/firebase\";\nimport \"../../../assets/stylesheets/adminPage.css\";\nimport UpdateProfile from \"../../Profiles/UpdateProfile/UpdateProfille\";\n\nconst AdminHome = () => {\n  const { displayName, avatarUrl, email } = useSelector(\n    (state) => state.firebase.profile\n  );\n  const { uid } = useSelector((state) => state.firebase.auth);\n\n  const databaseRef = firebase.database().ref();\n\n  const userImagesRef = databaseRef.child(\"users\").child(uid).child(\"images\");\n  const timestamp = new Date();\n\n  const addImage = (url) => {\n    return userImagesRef.push({\n      url,\n      timestamp: timestamp.toDateString(),\n    });\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <section className=\"left-panel\">\n        <img src={avatarUrl} alt={displayName} />\n        <div style={{ marginTop: \"40px\" }}>\n          <UpdateProfile />\n        </div>\n\n        <div className=\"display-name\">{displayName}</div>\n        <div className=\"email\">{email}</div>\n      </section>\n\n      <section className=\"main-content\">\n        <AdminGallery />\n\n        <ImageUploader\n          handleClick={addImage}\n          styleClass={\"upload-button\"}\n          btnText={<i class=\"fa fa-plus\" aria-hidden=\"true\"></i>}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default AdminHome;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\n\nimport Home from \"./components/Home/Home\";\nimport PrivateRoute from \"./components/Auth/PrivateRoute/PrivateRoute\";\nimport SignIn from \"./components/Auth/SignIn/SignIn\";\nimport SignUp from \"./components/Auth/SignUp/SignUp\";\nimport AdminHome from \"./components/Admin/AdminHome/AdminHome\";\nimport Chat from \"./components/Chat/Chat\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nconst App = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <PrivateRoute exact path=\"/admin\">\n          <AdminHome />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/chat\">\n          <Chat />\n        </PrivateRoute>\n\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/sign-in\" component={SignIn} />\n        <Route path=\"/sign-up\" component={SignUp} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../assets/stylesheets/errorPage.css\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <h2>Oops, The Page you are looking for can't be found!</h2>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"../ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_IMAGES = \"GET_IMAGES\";\nexport const SET_IMAGES = \"SET_IMAGES\";\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { SET_IMAGES } from \"../actions/types\";\n\nconst initialState = {\n  imageUrls: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_IMAGES:\n      return {\n        ...state,\n        imageUrls: Object.assign([], action.payload),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducers\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport imageReducers from \"./imageReducers\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  profileImages: imageReducers,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport unregister from \"./registerServiceWorker\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\n\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./config/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  presence: \"presence\", // where list of online users is stored in database\r\n  sessions: \"sessions\",\r\n};\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, //since we are using Firestore\r\n};\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <BrowserRouter>\r\n        <ErrorBoundary>\r\n          <App />\r\n        </ErrorBoundary>\r\n      </BrowserRouter>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nunregister();\r\n"],"sourceRoot":""}