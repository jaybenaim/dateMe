{"version":3,"sources":["components/NavBar/navbar.module.css","components/NavBar/index.jsx","components/TopProfiles/TopProfiles.jsx","components/Home/Home.jsx","components/Auth/PrivateRoute/PrivateRoute.jsx","components/Notifications/Notifications.jsx","components/Auth/SignIn/SignIn.jsx","components/Auth/SignUp/SignUp.jsx","components/Admin/AdminHome/AdminGallery.jsx","config/cloudinary.js","config/firebase.js","components/Admin/AdminHome/ImageUploader/Cloudinary.jsx","components/Admin/AdminHome/AdminHome.jsx","App.jsx","registerServiceWorker.js","components/ErrorPage/index.jsx","components/ErrorBoundary/index.jsx","redux/actions/types.js","redux/reducers/errorReducers.js","redux/reducers/imageReducers.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["module","exports","NavBar","firebase","useFirebase","history","useHistory","isLoggedIn","useSelector","state","auth","isEmpty","Fragment","className","styles","skipLink","href","to","Button","variant","onClick","signOut","then","console","log","push","catch","error","TopProfiles","users","firestore","data","useFirestoreConnect","collection","storeAs","style","textAlign","topProfileElements","user","map","profile","i","displayName","email","avatarUrl","key","src","alt","height","width","topProfiles","Home","id","PrivateRoute","role","Component","children","rest","useState","showAlert","setShowAlert","undefined","render","props","Notifications","heading","body","type","small","confirmButtonText","handleConfirm","show","setShow","Alert","onClose","dismissible","Heading","Toast","Header","toUpperCase","Body","SignIn","setEmail","password","setPassword","errors","setErrors","signInWithProvider","provider","userEmail","length","userPassword","login","err","code","includes","name","method","htmlFor","placeholder","required","onChange","e","target","value","event","preventDefault","aria-hidden","createUser","AdminGallery","uid","useFirebaseConnect","images","Object","keys","url","rel","cloudinaryConfig","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","Cloudinary","userImagesRef","database","ref","child","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","result","secure_url","res","bind","AdminHome","App","exact","path","component","SignUp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorPage","ErrorBoundary","React","constructor","super","this","hasError","componentDidCatch","errorInfo","withRouter","initialState","imageUrls","combineReducers","action","payload","profileImages","assign","firebaseReducer","firestoreReducer","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","presence","sessions","dispatch","createFirestoreInstance","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42b9cf90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3TdC_\"};","import React from \"react\";\nimport styles from \"./navbar.module.css\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const isLoggedIn = useSelector((state) => !state.firebase.auth.isEmpty);\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        console.log(\"signed out\");\n        history.push(\"/sign-in\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          react_starter_template\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"/home\">\n            Home\n          </Link>\n          {isLoggedIn ? (\n            <>\n              <Link to=\"/admin\" className=\"nav-item nav-link \">\n                Account\n              </Link>\n\n              <Button\n                className=\"nav-item nav-link \"\n                variant={\"outline-secondary\"}\n                onClick={() => signOut()}\n              >\n                Logout\n              </Button>\n            </>\n          ) : (\n            <Link to=\"/sign-in\">Sign In</Link>\n          )}\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\n\nconst TopProfiles = () => {\n  const users = useSelector((state) => state.firestore.data.users);\n  useFirestoreConnect({\n    collection: \"users\",\n    storeAs: \"users\",\n  });\n\n  //   Get the top requested profiles\n  // TODO: add sorting algorithm to get most matched with\n  const topProfiles = () => {\n    let topProfileElements = [];\n    for (let user in users) {\n      topProfileElements.push(users[user]);\n    }\n    return topProfileElements.map((profile, i) => {\n      let { displayName, email, avatarUrl } = profile;\n\n      return (\n        <div key={i}>\n          <img\n            src={avatarUrl}\n            alt={displayName}\n            height={\"100px\"}\n            width={\"100px\"}\n          />\n          {displayName} - {email}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"\" style={{ textAlign: \"center\" }}>\n      Top Profiles\n      <Button>Add Profile</Button>\n      {topProfiles()}\n    </div>\n  );\n};\n\nexport default TopProfiles;\n//   const firestore = useFirestore();\n\n// const addProfile = (profile) => {\n//     if (!profile) {\n//         profile = { name: \"john\" };\n//     }\n//     firestore\n//         .collection(\"profiles\")\n//         .add(profile)\n//         .then((docRef) => {\n//             docRef.update({\n//                 profileId: docRef.id,\n//             });\n//         });\n// };\n","import React from \"react\";\r\nimport TopProfiles from \"../TopProfiles/TopProfiles\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main id=\"mainContent\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-5 p-0\">\r\n          <h3>Home</h3>\r\n        </div>\r\n        <TopProfiles />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\n// eslint-disable-next-line\nimport { Route } from \"react-router-dom\";\nimport Home from \"../../Home/Home\";\nimport { useSelector } from \"react-redux\";\n\nfunction PrivateRoute({ role, children: Component, ...rest }) {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const [showAlert, setShowAlert] = useState(true);\n  if (role === undefined) {\n    role = false;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth.isEmpty ? (\n          Component\n        ) : showAlert ? (\n          <>\n            <div className=\"alert alert-danger login-alert\" role=\"alert\">\n              Please login first!\n              <button\n                className=\"btn-success alert-close-btn\"\n                onClick={() => setShowAlert(false)}\n              >\n                X\n              </button>\n            </div>\n          </>\n        ) : (\n          <Home {...props} />\n        )\n      }\n    />\n  );\n}\nexport default PrivateRoute;\n\n/// create component with alert message to login\n","import React, { useState } from \"react\";\nimport { Toast, Alert, Button } from \"react-bootstrap\";\n\nconst Notifications = ({\n  heading,\n  body,\n  type,\n  small,\n  variant,\n  confirmButtonText,\n  handleConfirm,\n  style,\n}) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    show &&\n    (type === \"alert\" ? (\n      <Alert\n        variant={variant}\n        onClose={() => setShow(false)}\n        style={style}\n        dismissible\n      >\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p>{body}</p>\n        {confirmButtonText && (\n          <Button variant=\"outline-danger\" onClick={handleConfirm}>\n            {confirmButtonText}{\" \"}\n          </Button>\n        )}\n      </Alert>\n    ) : (\n      type === \"toast\" && (\n        <Toast onClose={() => setShow(false)} style={style}>\n          <Toast.Header>\n            <strong className=\"mr-auto\">{heading.toUpperCase()}</strong>\n            <small>{small}</small>\n          </Toast.Header>\n          <Toast.Body>{body}</Toast.Body>\n        </Toast>\n      )\n    ))\n  );\n};\n\nexport default Notifications;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"../../Notifications/Notifications\";\n\nimport \"../../../assets/stylesheets/signin.css\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n\n    firebase\n      .login({\n        provider: provider === \"email\" ? null : provider,\n        type: \"popup\",\n        email: userEmail,\n        password: userPassword,\n      })\n      .then(() => {\n        history.push(\"/admin\");\n      })\n      .catch((err) => {\n        if (err.code.includes(\"account-exists\")) {\n          setErrors([...errors, \"Account Exists\"]);\n        }\n      });\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Log In </h3>\n                  <Link to=\"sign-up\">Sign up</Link>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"../../Notifications/Notifications\";\nimport \"../../../assets/stylesheets/signin.css\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n    if (provider === \"email\") {\n      firebase\n        .createUser({\n          email,\n          password,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    } else {\n      firebase\n        .login({\n          provider: provider === \"email\" ? null : provider,\n          type: \"popup\",\n          email: userEmail,\n          password: userPassword,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    }\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Sign up </h3>\n                  <Link to=\"sign-in\">Log In</Link>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <h1>Sign In</h1>\n      <button\n        onClick={(event) => {\n          event.preventDefault();\n          signInWithGoogle();\n        }}\n      >\n        Sign In with Google\n      </button> */}\n    </div>\n  );\n};\nexport default SignIn;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useFirebaseConnect } from \"react-redux-firebase\";\n\nimport \"../../../assets/stylesheets/adminGallery.css\";\n\nconst AdminGallery = (props) => {\n  const { uid } = useSelector((state) => state.firebase.auth);\n\n  // get user images store to redux\n  useFirebaseConnect(`users/${uid}/images`);\n\n  const images = useSelector(\n    (state) =>\n      state.firebase.data.users && state.firebase.data.users[uid].images\n  );\n\n  const imageElements = () => {\n    return (\n      images &&\n      Object.keys(images).map((key, i) => {\n        let url = images[key];\n        return (\n          <a href={url} target=\"_blank\" key={i} rel=\"noopener noreferrer\">\n            <img src={url} alt={\"insert alt\"} />\n          </a>\n        );\n      })\n    );\n  };\n\n  return <div className=\"user-image-gallery\">{imageElements()}</div>;\n};\n\nexport default AdminGallery;\n","const cloudinaryConfig = {\n  cloudName: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n  apiKey: process.env.REACT_APP_CLOUDINARY_KEY,\n  apiSecret: process.env.REACT_APP_CLOUDINARY_SECRET,\n  uploadPreset: process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET,\n};\n\nexport { cloudinaryConfig };\n","import * as firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n//analytics is optional for this tutoral\n// firebase.analytics();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\n\nexport { storage, auth, firestore, firebase };\n","import React from \"react\";\n\nimport { cloudinaryConfig } from \"../../../../config/cloudinary\";\n\nimport { useSelector } from \"react-redux\";\nimport { firebase } from \"../../../../config/firebase\";\n\nconst Cloudinary = () => {\n  const { uid } = useSelector((state) => state.firebase.auth);\n\n  const databaseRef = firebase.database().ref();\n\n  const userImagesRef = databaseRef.child(\"users\").child(uid).child(\"images\");\n\n  const addImage = (url) => {\n    return userImagesRef.push(url, (res) => console.log(res));\n  };\n\n  const uploadWidget = () => {\n    // eslint-disable-next-line\n    cloudinary.openUploadWidget(\n      {\n        cloud_name: cloudinaryConfig.cloudName,\n        upload_preset: cloudinaryConfig.uploadPreset,\n        tags: [\"dating\"],\n      },\n      function (err, result) {\n        if (err) {\n          console.log(err);\n        } else {\n          addImage(result[0].secure_url);\n        }\n      }\n    );\n  };\n  return (\n    <div className=\"main\">\n      <div className=\"upload\">\n        <button onClick={uploadWidget.bind(this)} className=\"upload-button\">\n          Add Image\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Cloudinary;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../../../assets/stylesheets/adminPage.css\";\nimport AdminGallery from \"./AdminGallery\";\nimport Cloudinary from \"./ImageUploader/Cloudinary\";\n\nconst AdminHome = () => {\n  const { displayName, avatarUrl, email } = useSelector(\n    (state) => state.firebase.profile\n  );\n\n  return (\n    <div className=\"admin-page\">\n      <section className=\"left-panel\">\n        <img src={avatarUrl} alt={displayName} />\n        <div className=\"display-name\">{displayName}</div>\n        <div className=\"email\">{email}</div>\n        <Cloudinary />\n      </section>\n\n      <section className=\"main-content\">\n        <AdminGallery />\n      </section>\n    </div>\n  );\n};\n\nexport default AdminHome;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\n\nimport Home from \"./components/Home/Home\";\nimport PrivateRoute from \"./components/Auth/PrivateRoute/PrivateRoute\";\nimport SignIn from \"./components/Auth/SignIn/SignIn\";\nimport SignUp from \"./components/Auth/SignUp/SignUp\";\nimport AdminHome from \"./components/Admin/AdminHome/AdminHome\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nconst App = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <PrivateRoute exact path=\"/admin\">\n          <AdminHome />\n        </PrivateRoute>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/sign-in\" component={SignIn} />\n        <Route path=\"/sign-up\" component={SignUp} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../assets/stylesheets/errorPage.css\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <h2>Oops, The Page you are looking for can't be found!</h2>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"../ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_IMAGES = \"GET_IMAGES\";\nexport const SET_IMAGES = \"SET_IMAGES\";\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { SET_IMAGES } from \"../actions/types\";\n\nconst initialState = {\n  imageUrls: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_IMAGES:\n      return {\n        ...state,\n        imageUrls: Object.assign([], action.payload),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducers\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport imageReducers from \"./imageReducers\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  profileImages: imageReducers,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport unregister from \"./registerServiceWorker\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\n\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./config/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\n// import cloudinaryConfig from \"./config/cloudinary\";\r\n// import cloudinary from \"cloudinary\";\r\n\r\n// cloudinary image hosting\r\n// console.log(process.env.REACT_APP_CLOUDINARY_CLOUD_NAME);\r\n// cloudinary.config({\r\n//   cloud_name: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\r\n//   api_key: process.env.REACT_APP_CLOUDINARY_KEY,\r\n//   api_secret: process.env.REACT_APP_CLOUDINARY_SECRET,\r\n// });\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  presence: \"presence\", // where list of online users is stored in database\r\n  sessions: \"sessions\",\r\n};\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, //since we are using Firestore\r\n};\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <BrowserRouter>\r\n        <ErrorBoundary>\r\n          <App />\r\n        </ErrorBoundary>\r\n      </BrowserRouter>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nunregister();\r\n"],"sourceRoot":""}